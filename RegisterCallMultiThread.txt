// oSearchDataPartial.onclickSurvey({executeStore: true});

oSearchDataPartial.executeAllTenants = function executeAllTenants(tenants) {
	let me = this;

	me.maxTenantProcess = 50;
	me.maxOrganProcess = 1;
	me.tenantAll = tenants;
	me.totalTenants = me.tenantAll.length;
	me.numberTenantRunSuccess = 0;
	me.numberTenantRun = 0;
	
	for (var i = 0; i < me.maxTenantProcess; i++) {
		let name = "Tenant_" + i;
		me.executeTenantProcess(name);
	}
};

oSearchDataPartial.executeOrganProcess = async function executeOrganProcess(name) {
	let me = this;

	if (me[name]["TotalExecute"] > 0) {
		me[name]["TotalExecute"] -= 1;

		let params = {
			tenant_id: me[name]["TenantFocus"] ? me[name]["TenantFocus"].tenant_id : "",
			query: $("#txtSearchData").val()
		};

		me.params = params;
		
		if(me.params.tenant_id){
			let res = await me.getSearchDataByOrgan();

			if (res && res.Status === MISA.Enumeration.ServiceStatus.Success && res.Data) {
				me.executeOrganProcess(name);
			} else {
				me.executeOrganProcess(name);
			}
		}else{
			me.executeOrganProcess(name);
		}
		
	} else {
		me.numberTenantRunSuccess += 1;
		
		if(me[name]["TenantFocus"]){
			console.log(me[name]["TenantFocus"].tenant_code + " - " + me[name]["TenantFocus"].tenant_name + " _done_" + me.numberTenantRunSuccess);
		}
		
		me.executeTenantProcess(name);
	}
};

oSearchDataPartial.executeTenantProcess = async function executeTenantProcess(name) {
	let me = this;

	if (me.numberTenantRunSuccess <= me.totalTenants) {
		let tenantFocus = me.tenantAll.pop();

		me[name] = me[name] || {};
		me[name]["TenantFocus"] = tenantFocus;
		me[name]["TotalExecute"] = 1;

		me.executeOrganProcess(name);
	} 
};

oSearchDataPartial.getSearchDataByOrgan = function getSearchDataByOrgan() {
	return new Promise((resolve, reject) => {
		let me = this,
			url = MISAUtil.getServiceUrl(MISA.Enumeration.MicroserviceType.Core, "ExecuteScript", "OrganizationManagement"),
			param = me.getParamCallServer();

		if (url) {
			AjaxJSON(url, { type: "POST", async: true, }, param, res => {
				resolve(res);
			},
				res => {
					reject(res);
				}
			)
		}
	})
};

oSearchDataPartial.validateForm = function validateForm(detail) {
	let me = this,
		isValid = true;

	// Lấy dữ liệu nhập vào
	me.params.query = $("#txtSearchData").val();

	if ((detail && !me.params.tenant_id) || !me.params.query) {
		isValid = false;

		MISAMessageBox.toastrError("Vui lòng chọn tỉnh và nhập câu lệnh truy vấn!");
	}

	return isValid;
};

oSearchDataPartial.onclickSurvey({executeStore: true});
